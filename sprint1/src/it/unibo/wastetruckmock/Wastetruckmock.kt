/* Generated by AN DISI Unibo */ 
package it.unibo.wastetruckmock

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Wastetruckmock ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "start"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("start") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | START")
					}
					 transition( edgeName="goto",targetState="camion_req", cond=doswitch() )
				}	 
				state("camion_req") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						 
									var Peso    = kotlin.random.Random.nextInt(0,10)
									var TipoInt = kotlin.random.Random.nextInt(0,1)
									var Tipo_carico    = ""
									
									if(TipoInt == 0) 
										Tipo_carico = "G"
									else
										Tipo_carico = "P"
						println("WASTE TRUCK | CAMION REQ ($Tipo_carico, $Peso)")
						request("load_req", "load_req($Tipo_carico,$Peso)" ,"waste_service" )  
					}
					 transition(edgeName="t07",targetState="camion_accepted",cond=whenReply("loadaccepted"))
					transition(edgeName="t08",targetState="camion_rejected",cond=whenReply("loadrejected"))
				}	 
				state("camion_rejected") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION RIFIUTATO")
					}
					 transition( edgeName="goto",targetState="fine", cond=doswitch() )
				}	 
				state("camion_accepted") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 1 ACCETTATO")
					}
					 transition(edgeName="t09",targetState="camion_terminazione",cond=whenEvent("load_pickup"))
				}	 
				state("camion_terminazione") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 1 TERMINA")
					}
					 transition( edgeName="goto",targetState="fine", cond=doswitch() )
				}	 
				state("fine") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | FINE!")
					}
				}	 
			}
		}
}
