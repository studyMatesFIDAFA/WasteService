/* Generated by AN DISI Unibo */ 
package it.unibo.wastetruckmock

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Wastetruckmock ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "start"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("start") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | START")
					}
					 transition( edgeName="goto",targetState="camion1_req", cond=doswitch() )
				}	 
				state("camion1_req") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 1 REQ (GLASS, 8)")
						request("load_req", "load_req(G,8)" ,"waste_service" )  
					}
					 transition(edgeName="t77",targetState="camion1_accepted",cond=whenReply("loadaccepted"))
					transition(edgeName="t78",targetState="not_as_planned",cond=whenReply("loadrejected"))
				}	 
				state("camion1_accepted") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 1 ACCETTATO")
					}
					 transition(edgeName="t09",targetState="camion1_terminazione",cond=whenEvent("load_pickup"))
				}	 
				state("camion1_terminazione") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 1 TERMINA")
					}
					 transition( edgeName="goto",targetState="camion2_req", cond=doswitch() )
				}	 
				state("camion2_req") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 2 REQ (GLASS, 3)")
						request("load_req", "load_req(G,3)" ,"waste_service" )  
					}
					 transition(edgeName="t110",targetState="camion2_rejected",cond=whenReply("loadrejected"))
					transition(edgeName="t111",targetState="not_as_planned",cond=whenReply("loadaccepted"))
				}	 
				state("camion2_rejected") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 2 REJECTED")
					}
					 transition( edgeName="goto",targetState="camion3_req", cond=doswitch() )
				}	 
				state("camion3_req") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(250) 
						println("WASTE TRUCK | CAMION 3 REQ (PLASTIC, 4)")
						request("load_req", "load_req(P,4)" ,"waste_service" )  
					}
					 transition(edgeName="t212",targetState="camion4_req",cond=whenReply("loadaccepted"))
					transition(edgeName="t213",targetState="not_as_planned",cond=whenReply("loadrejected"))
				}	 
				state("camion4_req") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(250) 
						println("WASTE TRUCK | CAMION 4 REQ (PLASTIC, 3)")
						request("load_req", "load_req(P,3)" ,"waste_service" )  
					}
					 transition(edgeName="t314",targetState="camion5_req",cond=whenReply("loadaccepted"))
					transition(edgeName="t315",targetState="not_as_planned",cond=whenReply("loadrejected"))
				}	 
				state("camion5_req") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						delay(250) 
						println("WASTE TRUCK | CAMION 5 REQ (PLASTIC, 8)")
						request("load_req", "load_req(P,8)" ,"waste_service" )  
					}
					 transition(edgeName="t416",targetState="camion3_accepted",cond=whenReply("loadrejected"))
					transition(edgeName="t417",targetState="not_as_planned",cond=whenReply("loadaccepted"))
				}	 
				state("camion3_accepted") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 3 ACCETTATO")
					}
					 transition(edgeName="t518",targetState="camion3_terminazione",cond=whenEvent("load_pickup"))
				}	 
				state("camion3_terminazione") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 3 TERMINA")
					}
					 transition( edgeName="goto",targetState="camion4_accepted", cond=doswitch() )
				}	 
				state("camion4_accepted") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 4 ACCETTATO")
					}
					 transition(edgeName="t619",targetState="camion4_terminazione",cond=whenEvent("load_pickup"))
				}	 
				state("camion4_terminazione") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | CAMION 4 TERMINA")
					}
					 transition( edgeName="goto",targetState="fine", cond=doswitch() )
				}	 
				state("fine") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | FINE!")
					}
				}	 
				state("not_as_planned") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("WASTE TRUCK | ERRORE!!!!!")
					}
				}	 
			}
		}
}
