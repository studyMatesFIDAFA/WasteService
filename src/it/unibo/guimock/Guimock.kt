/* Generated by AN DISI Unibo */ 
package it.unibo.guimock

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Guimock ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "start"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				var CaricoP = 0
				var CaricoG = 0
				var StatoTrolley = "home"
		return { //this:ActionBasciFsm
				state("start") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("GUI | START")
						println("GUI | STATO TROLLEY: $StatoTrolley")
						println("GUI | CARICO PLASTIC: $CaricoP")
						println("GUI | CARICO GLASS: $CaricoG")
					}
					 transition(edgeName="t020",targetState="aggiornamento_trolley",cond=whenEvent("trolley_state"))
					transition(edgeName="t021",targetState="aggiornamento_carico",cond=whenEvent("waste_state"))
				}	 
				state("aggiornamento_trolley") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("GUI | AGGIORNAMENTO TROLLEY")
						if( checkMsgContent( Term.createTerm("trolley_state(STATO)"), Term.createTerm("trolley_state(STATE)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								
											StatoTrolley = payloadArg(0)
						}
						println("GUI | STATO TROLLEY: $StatoTrolley")
						println("GUI | CARICO PLASTIC: $CaricoP")
						println("GUI | CARICO GLASS: $CaricoG")
					}
					 transition(edgeName="t022",targetState="aggiornamento_trolley",cond=whenEvent("trolley_state"))
					transition(edgeName="t023",targetState="aggiornamento_carico",cond=whenEvent("waste_state"))
				}	 
				state("aggiornamento_carico") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("GUI | AGGIORNAMENTO TROLLEY")
						if( checkMsgContent( Term.createTerm("waste_state(PESOP,PESOG)"), Term.createTerm("waste_state(PESOP,PESOG)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								
											CaricoP = payloadArg(0).toInt()
											CaricoG = payloadArg(1).toInt()
						}
						println("GUI | STATO TROLLEY: $StatoTrolley")
						println("GUI | CARICO PLASTIC: $CaricoP")
						println("GUI | CARICO GLASS: $CaricoG")
					}
					 transition(edgeName="t024",targetState="aggiornamento_trolley",cond=whenEvent("trolley_state"))
					transition(edgeName="t025",targetState="aggiornamento_carico",cond=whenEvent("waste_state"))
				}	 
			}
		}
}
