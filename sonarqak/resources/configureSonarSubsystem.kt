package sonarConfig

import DistanceObserver
import it.unibo.kactor.ActorBasic
import it.unibo.kactor.sysUtil
import it.unibo.radarSystem22.domain.interfaces.ISonarForObs

lateinit var firstActorInPipe : ActorBasic
lateinit var Sonar : ISonarForObs

fun createThePipe( simulate : Boolean, sonarActorName : String  ){
    if( simulate )  firstActorInPipe = sysUtil.getActor("sonarsimulator")!!  //generates simulated data
    else firstActorInPipe           = sysUtil.getActor("sonardatasource")!!  //generates REAL data
    firstActorInPipe.
        //subscribeLocalActor("datacleaner"). 		//removes 'wrong' data''
        //subscribeLocalActor("datalogger").		    //logs (shows) the data generated by the sonar
        //subscribeLocalActor("sonar").				//handles sonarrobot but does not propagate ...
        //subscribeLocalActor("distancefilter").		//propagates the lcoal stream event obstacle
        subscribeLocalActor(sonarActorName)
}


fun configureTheSonar(simulate : Boolean=true, sonarActorName : String = "sonar", usingDomain : Boolean=false){
    if( ! usingDomain ) createThePipe(simulate, sonarActorName)
    else configureTheSonarUsingDomain(simulate, sonarActorName)
}

fun configureTheSonarUsingDomain(simulate : Boolean, sonarActorName : String ){
    if( simulate ){
        `it.unibo`.radarSystem22.domain.utils.DomainSystemConfig.simulation       = true
        //`it.unibo`.radarSystem22.domain.utils.DomainSystemConfig.sonarObservable  = true
        `it.unibo`.radarSystem22.domain.utils.DomainSystemConfig.tracing     = true
        `it.unibo`.radarSystem22.domain.utils.DomainSystemConfig.sonarDelay  = 200
        Sonar = `it.unibo`.radarSystem22.domain.DeviceFactory.createSonarForObs()
        //Todo: add an observer for the Sonar that emits events for the sonarActorName
        val owner = sysUtil.getActor(sonarActorName)
        val obs = DistanceObserver(owner!!)
        Sonar.distance.addObserver(obs)
        println("created the simulated sonar $Sonar")
    }
}

fun activateSonarSimulated(){
    Sonar.activate()
}